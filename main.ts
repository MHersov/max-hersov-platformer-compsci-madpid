namespace myTiles {
    //% blockIdentity=images._tile
    export const tile0 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
}
sprites.onCreated(SpriteKind.Projectile, function (sprite) {
    sprite.setPosition(mySprite.x, mySprite.y)
    if (0 == DirectionBullet) {
        sprite.setVelocity(150, 0)
    } else {
        sprite.setVelocity(-150, 0)
        sprite.image.flipX()
    }
})
function gravity (num: number, mySprite: Sprite) {
    mySprite.ay = num
}
controller.B.onEvent(ControllerButtonEvent.Pressed, function () {
    music.pewPew.play()
    DirectionBullet = 0
    mySprite2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 8 8 8 8 . . . . . . . 
. . . 8 8 8 8 8 8 8 . . . . . . 
. 8 8 8 8 8 8 8 8 8 6 . . . . . 
. 8 8 8 8 8 8 8 8 6 9 . . . . . 
. . . 8 8 6 6 6 6 9 . . . . . . 
. . . . . 9 9 9 9 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Projectile)
    pause(500)
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Enemy, function (sprite, otherSprite) {
    Score += 1
    sprite.destroy()
    otherSprite.destroy()
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    music.pewPew.play()
    DirectionBullet = 1
    mySprite2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 8 8 8 8 . . . . . . . 
. . . 8 8 8 8 8 8 8 . . . . . . 
. 8 8 8 8 8 8 8 8 8 6 . . . . . 
. 8 8 8 8 8 8 8 8 6 9 . . . . . 
. . . 8 8 6 6 6 6 9 . . . . . . 
. . . . . 9 9 9 9 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Projectile)
    pause(500)
})
scene.onHitWall(SpriteKind.Projectile, function (sprite) {
    sprite.destroy(effects.bubbles, 100)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Enemy, function (sprite, otherSprite) {
    otherSprite.destroy(effects.blizzard, 100)
    scene.cameraShake(3, 200)
    info.changeLifeBy(-1)
})
controller.up.onEvent(ControllerButtonEvent.Pressed, function () {
    if (mySprite.isHittingTile(CollisionDirection.Bottom)) {
        mySprite.vy = -200
    }
})
sprites.onCreated(SpriteKind.Enemy, function (sprite) {
    gravity(90000, sprite)
    sprite.setFlag(SpriteFlag.BounceOnWall, true)
    sprite.lifespan = 5000
    tiles.placeOnTile(sprite, tiles.getTileLocation(Math.randomRange(0, 16), 0))
    sprite.follow(mySprite, 50)
    if (sprite.isHittingTile(CollisionDirection.Left) || sprite.isHittingTile(CollisionDirection.Right)) {
        sprite.vx = 0 - 2 * sprite.vx
    }
})
let mySprite3: Sprite = null
let mySprite2: Sprite = null
let mySprite: Sprite = null
let DirectionBullet = 0
let mySprite4 = sprites.create(img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 8 8 8 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . 8 8 8 . . . . . . . . . . . . 8 . . 8 8 . . . . . . . . . . . . . . . . . . . . . . 8 8 . . . . . . 8 8 8 . . . 8 . . . . 8 . . . . . . 8 8 8 . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . 8 . . . 8 . . . . . . 8 8 . . . 8 . 8 . . 8 . . . . . . . . . . . . . . . . . . . . 8 . . 8 . . . . 8 . . . 8 . . 8 . . . . 8 8 . . . . 8 8 . 8 8 . . . . . . . . . . . . . . . . . . . . . . . . . 
. 8 . . . . . 8 . . . . 8 . . 8 . . 8 . 8 . . 8 . . . . . . . . . . . . . . . . . . . 8 . . . . 8 . . 8 . . . . . 8 . . . . . . 8 8 . . . . 8 . . . 8 . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . 8 . . . 8 . . . . 8 . 8 . . 8 8 8 . . . . . . . . . . . . . . . . . . . . . . . . 8 . . 8 . . . . . 8 . . . . . . 8 . . . . 8 8 . . . 8 . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . 8 . . . 8 . . . . 8 . 8 . . . . 8 . . . . . . . . . . . . . . . . . . . . . . . 8 . . . 8 . . . . . 8 . . . . . 8 8 . . . . 8 . . . . 8 . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . 8 . . . . 8 . . . . 8 . 8 . . . . 8 . . . . . . . . . . . . . . . . . . . . . . 8 . . . . . 8 . . . . 8 . . . . 8 8 . . . . . 8 8 . . . 8 . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . 8 . . . . . 8 . . . . 8 . 8 . . . . 8 . . . . . . . . . . . . . . . . . . . . . 8 . . . . . . . 8 . . 8 . . . . 8 8 . . . . . . . 8 8 8 8 . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . 8 . . . . . . . 8 . . 8 . . 8 . . . . 8 . . . . . . . . . . . . . . . . . . . . 8 8 8 8 8 . . . . . 8 8 . . . . 8 8 8 8 8 8 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . 8 . . . . . . . . . 8 8 . . . 8 . . . . 8 . . . 8 . . 8 . . 8 . . 8 . . 8 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . 8 8 8 8 8 8 8 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`, SpriteKind.Food)
let picture = 0
DirectionBullet = 0
let INLAVA = 0
let Score = 0
let Coronavirus = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 3 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Enemy)
let level = 1
info.setLife(5)
scene.setBackgroundColor(9)
mySprite = sprites.create(img`
. . . . . 5 5 5 5 5 5 . . . . . 
. . . . . d 3 8 3 8 d . . . . . 
. . . . . 3 d 9 9 9 3 . . . . . 
. . . . . 3 3 9 9 9 3 . . . . . 
. . . 6 6 6 6 6 6 6 6 6 . . . . 
. . . 6 6 6 6 6 6 6 6 6 . . . . 
. . . 6 6 6 6 6 6 6 6 6 . . . . 
. . . 6 6 6 6 6 6 6 6 6 . . . . 
. . . 6 6 6 6 6 6 6 6 6 . . . . 
. . . 6 6 f f f f f 6 6 . . . . 
. . . 3 3 2 2 2 2 2 3 3 . . . . 
. . . 3 2 2 2 2 2 2 3 . . . . . 
. . . . 2 2 2 2 2 2 2 . . . . . 
. . . . 2 2 2 . 2 2 2 . . . . . 
. . . . 3 3 3 . 3 3 3 . . . . . 
. . . f f f f . f f f f . . . . 
`, SpriteKind.Player)
controller.moveSprite(mySprite, 100, 0)
gravity(90000, Coronavirus)
gravity(500, mySprite)
tiles.placeOnTile(mySprite, tiles.getTileLocation(8, 5))
game.showLongText("Move me with the arrow keys and shoot with x and space for left and right respectively. Avoid the Coronavirus and stay alive. Reach the right of the screen to begin.", DialogLayout.Center)
tiles.placeOnTile(mySprite, tiles.getTileLocation(10, 12))
game.onUpdateInterval(5000, function () {
    info.changeLifeBy(1)
})
forever(function () {
    if (Score >= 25) {
        tiles.placeOnTile(mySprite, tiles.getTileLocation(7, 12))
        tiles.setTilemap(tiles.createTilemap(
            hex`a`,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 2 2 2 2 2 2 . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . 2 2 . . . . . 2 2 2 2 . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 . . . . . . . . . . . . . . . . . . 2 2 . . . . . . . . . 2 2 . . . . . . . . . . 2 2 2 2 . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . 2 2 2 . . . 2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . 2 2 . . . . . . . 2 2 . . . . . . . . . . . . . . 2 2 2 . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . 2 2 2 . . . 2 2 2 2 2 2 2 . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 . . 2 2 . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . 2 . . 2 . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . 2 . . . 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . 2 . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 2 2 . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,sprites.castle.tilePath2,sprites.castle.tilePath6,sprites.castle.tilePath4,sprites.castle.tilePath3,sprites.castle.tilePath1,sprites.castle.tilePath5,sprites.builtin.forestTiles0],
            TileScale.Sixteen
        ))
        mySprite3 = sprites.create(img`
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f d d d d d d d d d d d d d d d d d d d d d d d d d d d d f 
f d 8 8 8 d 8 8 8 d d d d 8 d 8 d d 8 d d 8 d 8 d d d d d f 
f d d 8 d d 8 d d d d d d 8 8 8 d 8 d 8 d 8 d 8 d d d d d f 
f d d 8 d d 8 8 8 d d d d d 8 d d 8 d 8 d 8 d 8 d d d d d f 
f d 8 8 8 d 8 d d d d d d d 8 d d d 8 d d 8 8 8 d d d d d f 
f d d d d d d d d d d d d d d d d d d d d d d d d d d d d f 
f d 8 8 8 d 8 8 8 d 8 8 8 d d d d 8 d d 8 d 8 d 8 8 8 d d f 
f d 8 d d d 8 d d d d 8 d d d d 8 d 8 d 8 d 8 d d 8 d d d f 
f d 8 d 8 d 8 8 8 d d 8 d d d d 8 d 8 d 8 d 8 d d 8 d d d f 
f d 8 8 8 d 8 d d d d 8 d d d d d 8 d d 8 8 8 d d 8 d d d f 
f d d d d d 8 8 8 d d d d d d d d d d d d d d d d d d d d f 
f d d d d d d d d d d d d d d d d d d d d d d d d d d d d f 
f d 2 d 2 d 2 d 2 d 2 d 2 d 2 d 2 d 2 d 2 d 2 d 2 d 2 d 2 f 
f d d d d d d d d d d d d d d d d d d d d d d d d d d d d f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
`, SpriteKind.Food)
    } else if (Score == 20) {
        tiles.setTilemap(tiles.createTilemap(
            hex``,
            img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
. . . . . . . . . . 2 . . . . 2 
. . . . 2 . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . 2 . . . 
. . . 2 . . 2 . . . . . . . . . 
2 . . . . . . . . 2 . . . . . 2 
. . . . . . . . . . . . . . . . 
. 2 . . 2 . . . . . 2 . . . 2 . 
. . . . . . . 2 . . . . . . . . 
2 . . 2 . 2 . . . . 2 . . 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundNorth,sprites.dungeon.hazardLava1,sprites.dungeon.hazardHole],
            TileScale.Sixteen
        ))
    } else if (Score == 15) {
        tiles.setTilemap(tiles.createTilemap(
            hex``,
            img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 . . . . . . . . . . 2 . . 
. . 2 2 . . . . . . . . 2 2 . . 
. . 2 . . . . . . . . . . 2 . . 
. . . . . . 2 . . 2 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 2 2 . . . . 2 2 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 2 . . 2 . . . . . . 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . 2 2 . 2 2 . 2 2 . . 2 2 
2 2 . . 2 2 . . . . . 2 . . 2 2 
2 2 . 2 . . . . . . . . 2 . 2 2 
. . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,sprites.dungeon.hazardLava1,sprites.dungeon.buttonOrangeDepressed,sprites.dungeon.buttonOrange,sprites.dungeon.hazardHole,sprites.dungeon.hazardWater],
            TileScale.Sixteen
        ))
    } else if (Score == 10) {
        tiles.setTilemap(tiles.createTilemap(
            hex`10001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030300000000000000000000030300000607000003030000000000000607000000000000060700000003030000000000000000000000000303060700000000000a0a0000000000060700000303000000090c000000030300000000060700000000000000000607000000000000030300000000030300000000000000000607000000000607000000000303000000000303030300000000030306070401040106050507010401040607`,
            img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . . . . . . 2 2 . . . . . . 2 
. . . 2 2 . . . . . . 2 2 . . . 
. . . . . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . 2 2 
. . . . . . . . . . . . . . . . 
. . 2 2 . . . . . . . . 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . 2 2 . . . . 2 2 . . . . 
. . . . . . . . . . . . . . . . 
2 2 . . . . 2 2 2 2 . . . . 2 2 
2 2 . . . . 2 2 2 2 . . . . 2 2 
`,
            [myTiles.tile0,sprites.dungeon.hazardLava1,sprites.dungeon.hazardWater,sprites.builtin.oceanDepths0,sprites.builtin.coral2,sprites.builtin.oceanDepths9,sprites.builtin.oceanDepths8,sprites.builtin.oceanDepths10,sprites.builtin.oceanDepths11,sprites.builtin.oceanSand13,sprites.builtin.oceanSand4,sprites.builtin.oceanSand12,sprites.builtin.oceanSand15],
            TileScale.Sixteen
        ))
    } else if (Score == 5) {
        tiles.setTilemap(tiles.createTilemap(
            hex`100010000000000000000000000000000000000003030101010000000000000101010303000000000000000000000000000000000000000000000000000000000000000000000001010101000001010101000000000000000000000000000000000000000301050000000000000000000006010300000301000000000000000001030000000000000000000101000000000000000000030101050000000006010103000000000000000301000001030000000000050000000000000000000000000000060200000000000006050000000000000403010101000001030301000001010103000000000000000000000000000000000b0b0b0b0a0a0b0b0b0b0a0a0b0b0b0b`,
            img`
. . . . . . . . . . . . . . . . 
. . 2 2 2 . . . . . . 2 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 2 2 2 2 . . 2 2 2 2 . . . 
. . . . . . . . . . . . . . . . 
. 2 2 . . . . . . . . . . 2 2 . 
. . 2 2 . . . . . . . . 2 2 . . 
. . . . . . . 2 2 . . . . . . . 
. . . 2 2 2 . . . . 2 2 2 . . . 
. . . . . 2 2 . . 2 2 . . . . . 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . 2 2 . . . . . . 2 
2 2 2 2 . . 2 2 2 2 . . 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . 2 2 . . . . 2 2 . . . . 
`,
            [myTiles.tile0,sprites.castle.tilePath2,sprites.castle.tilePath6,sprites.castle.tilePath5,sprites.castle.tilePath4,sprites.castle.tilePath3,sprites.castle.tilePath1,sprites.castle.tilePath8,sprites.castle.tileDarkGrass2,sprites.builtin.forestTiles8,sprites.builtin.forestTiles6,sprites.dungeon.hazardLava1,sprites.dungeon.hazardLava0],
            TileScale.Sixteen
        ))
    } else if (Score < 5) {
        tiles.setTilemap(tiles.createTilemap(
            hex``,
            img`
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 . . 2 2 2 2 . . . . . . 2 . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . 2 . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . 2 . 2 . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . 2 . . 2 . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . 2 . 2 2 . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 . . . . 
2 . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . 2 2 2 . 2 2 2 . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . 2 2 2 . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 
`,
            [myTiles.tile0,sprites.castle.tilePath2,sprites.castle.tilePath6,sprites.castle.tileDarkGrass2,sprites.castle.tilePath5,sprites.dungeon.hazardLava1],
            TileScale.Sixteen
        ))
    }
})
forever(function () {
    if (INLAVA == 1) {
        info.changeLifeBy(-1)
        pause(1000)
        music.jumpDown.play()
    }
})
forever(function () {
    scene.cameraFollowSprite(mySprite)
})
forever(function () {
    if (mySprite.tileKindAt(TileDirection.Center, sprites.dungeon.hazardLava1)) {
        scene.cameraShake(4, 100)
        INLAVA = 1
    } else {
        INLAVA = 0
    }
    if (Coronavirus.tileKindAt(TileDirection.Center, sprites.dungeon.hazardLava1)) {
        Coronavirus.destroy()
    }
})
forever(function () {
    while (Score < 17 && Score > 4) {
        for (let index = 0; index < level / 5; index++) {
            Coronavirus = sprites.create(img`
. . . . 6 6 6 . . . . . . . . . 
. . . . . 6 . . 6 6 6 . 6 . . . 
. 6 . . . 6 . . . 6 . . . 6 . . 
6 6 . . 7 7 7 7 7 6 7 . 6 . 6 . 
. . 6 7 6 6 7 7 7 7 7 7 . . . . 
. . 6 7 6 6 7 7 7 7 6 6 7 . . . 
. . 7 7 7 6 7 7 7 7 6 6 7 . . . 
. . 7 7 7 7 6 6 7 6 7 7 7 . 6 . 
6 . 7 7 7 7 6 6 7 7 7 7 6 6 6 . 
6 6 6 7 7 7 7 7 7 7 7 7 7 . 6 . 
6 . 7 7 7 7 7 6 7 7 7 7 7 . . . 
. . 7 7 7 6 6 7 7 7 7 7 7 . . . 
. . . 7 7 6 6 7 6 7 7 6 . . . . 
. . . 6 7 7 7 7 6 7 7 . 6 . 6 . 
. 6 6 . . . . 6 6 6 . . . 6 . . 
. . 6 . . . . . . . . . 6 . . . 
`, SpriteKind.Enemy)
        }
        pause(1000)
        level += 1
        if (Score == 17) {
            Score = 20
        }
        if (Score > 4) {
            mySprite4.destroy()
        }
    }
})
forever(function () {
    if (mySprite.tileKindAt(TileDirection.Center, sprites.castle.tileDarkGrass2)) {
        tiles.placeOnTile(mySprite, tiles.getTileLocation(8, 5))
        Score = 5
    }
})
